// Code generated by protoc-gen-go. DO NOT EDIT.
// source: schema.proto

package mediainfo

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FileType int32

const (
	FileType_JPG FileType = 0
	FileType_RAW FileType = 1
)

var FileType_name = map[int32]string{
	0: "JPG",
	1: "RAW",
}

var FileType_value = map[string]int32{
	"JPG": 0,
	"RAW": 1,
}

func (x FileType) String() string {
	return proto.EnumName(FileType_name, int32(x))
}

func (FileType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{0}
}

// This represents a single image. It may contain a set of different files for
// example (.jpg, .raw, .mp4, etc) that have different resolutions or image
// quality for the same image.
type Media struct {
	// This is the "key" that you can use to refer to this image.
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// This is the timestamp of when this Media object was last modified. When
	// you modify a media object, don't modify the current one, but just add a
	// new one with a new timestamp.
	TimestampSeconds int64 `protobuf:"varint,2,opt,name=timestamp_seconds,json=timestampSeconds,proto3" json:"timestamp_seconds,omitempty"`
	// Metadata for the image.
	Photo *PhotoInfo `protobuf:"bytes,3,opt,name=photo,proto3" json:"photo,omitempty"`
	// The list of files that represent this image.
	File []*FileInfo `protobuf:"bytes,4,rep,name=file,proto3" json:"file,omitempty"`
	// Normalized name - This is constructed from the image metadata.
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// Allows us to tag images so we can easily sort and organize.
	Tags                 []string `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Media) Reset()         { *m = Media{} }
func (m *Media) String() string { return proto.CompactTextString(m) }
func (*Media) ProtoMessage()    {}
func (*Media) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{0}
}

func (m *Media) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Media.Unmarshal(m, b)
}
func (m *Media) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Media.Marshal(b, m, deterministic)
}
func (m *Media) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Media.Merge(m, src)
}
func (m *Media) XXX_Size() int {
	return xxx_messageInfo_Media.Size(m)
}
func (m *Media) XXX_DiscardUnknown() {
	xxx_messageInfo_Media.DiscardUnknown(m)
}

var xxx_messageInfo_Media proto.InternalMessageInfo

func (m *Media) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Media) GetTimestampSeconds() int64 {
	if m != nil {
		return m.TimestampSeconds
	}
	return 0
}

func (m *Media) GetPhoto() *PhotoInfo {
	if m != nil {
		return m.Photo
	}
	return nil
}

func (m *Media) GetFile() []*FileInfo {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *Media) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Media) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

// Information about the original media capture, this information shouldn't
// change.
type PhotoInfo struct {
	TimestampSeconds     int64     `protobuf:"varint,1,opt,name=timestamp_seconds,json=timestampSeconds,proto3" json:"timestamp_seconds,omitempty"`
	Datetime             string    `protobuf:"bytes,10,opt,name=datetime,proto3" json:"datetime,omitempty"`
	Make                 string    `protobuf:"bytes,2,opt,name=make,proto3" json:"make,omitempty"`
	Model                string    `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	Aperture             *Fraction `protobuf:"bytes,4,opt,name=aperture,proto3" json:"aperture,omitempty"`
	ExposureTime         *Fraction `protobuf:"bytes,5,opt,name=exposure_time,json=exposureTime,proto3" json:"exposure_time,omitempty"`
	FocalLength          *Fraction `protobuf:"bytes,6,opt,name=focal_length,json=focalLength,proto3" json:"focal_length,omitempty"`
	Iso                  int32     `protobuf:"varint,7,opt,name=iso,proto3" json:"iso,omitempty"`
	Width                int32     `protobuf:"varint,8,opt,name=width,proto3" json:"width,omitempty"`
	Height               int32     `protobuf:"varint,9,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PhotoInfo) Reset()         { *m = PhotoInfo{} }
func (m *PhotoInfo) String() string { return proto.CompactTextString(m) }
func (*PhotoInfo) ProtoMessage()    {}
func (*PhotoInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{1}
}

func (m *PhotoInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PhotoInfo.Unmarshal(m, b)
}
func (m *PhotoInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PhotoInfo.Marshal(b, m, deterministic)
}
func (m *PhotoInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhotoInfo.Merge(m, src)
}
func (m *PhotoInfo) XXX_Size() int {
	return xxx_messageInfo_PhotoInfo.Size(m)
}
func (m *PhotoInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PhotoInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PhotoInfo proto.InternalMessageInfo

func (m *PhotoInfo) GetTimestampSeconds() int64 {
	if m != nil {
		return m.TimestampSeconds
	}
	return 0
}

func (m *PhotoInfo) GetDatetime() string {
	if m != nil {
		return m.Datetime
	}
	return ""
}

func (m *PhotoInfo) GetMake() string {
	if m != nil {
		return m.Make
	}
	return ""
}

func (m *PhotoInfo) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *PhotoInfo) GetAperture() *Fraction {
	if m != nil {
		return m.Aperture
	}
	return nil
}

func (m *PhotoInfo) GetExposureTime() *Fraction {
	if m != nil {
		return m.ExposureTime
	}
	return nil
}

func (m *PhotoInfo) GetFocalLength() *Fraction {
	if m != nil {
		return m.FocalLength
	}
	return nil
}

func (m *PhotoInfo) GetIso() int32 {
	if m != nil {
		return m.Iso
	}
	return 0
}

func (m *PhotoInfo) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *PhotoInfo) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

type FileInfo struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Type                 FileType `protobuf:"varint,2,opt,name=type,proto3,enum=mediainfo.FileType" json:"type,omitempty"`
	Md5Sum               []byte   `protobuf:"bytes,3,opt,name=md5sum,proto3" json:"md5sum,omitempty"`
	Sha256Sum            []byte   `protobuf:"bytes,4,opt,name=sha256sum,proto3" json:"sha256sum,omitempty"`
	SizeInBytes          int64    `protobuf:"varint,5,opt,name=size_in_bytes,json=sizeInBytes,proto3" json:"size_in_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileInfo) Reset()         { *m = FileInfo{} }
func (m *FileInfo) String() string { return proto.CompactTextString(m) }
func (*FileInfo) ProtoMessage()    {}
func (*FileInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{2}
}

func (m *FileInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileInfo.Unmarshal(m, b)
}
func (m *FileInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileInfo.Marshal(b, m, deterministic)
}
func (m *FileInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileInfo.Merge(m, src)
}
func (m *FileInfo) XXX_Size() int {
	return xxx_messageInfo_FileInfo.Size(m)
}
func (m *FileInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FileInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FileInfo proto.InternalMessageInfo

func (m *FileInfo) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *FileInfo) GetType() FileType {
	if m != nil {
		return m.Type
	}
	return FileType_JPG
}

func (m *FileInfo) GetMd5Sum() []byte {
	if m != nil {
		return m.Md5Sum
	}
	return nil
}

func (m *FileInfo) GetSha256Sum() []byte {
	if m != nil {
		return m.Sha256Sum
	}
	return nil
}

func (m *FileInfo) GetSizeInBytes() int64 {
	if m != nil {
		return m.SizeInBytes
	}
	return 0
}

type Fraction struct {
	Numerator            int32    `protobuf:"varint,1,opt,name=numerator,proto3" json:"numerator,omitempty"`
	Denominator          int32    `protobuf:"varint,2,opt,name=denominator,proto3" json:"denominator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Fraction) Reset()         { *m = Fraction{} }
func (m *Fraction) String() string { return proto.CompactTextString(m) }
func (*Fraction) ProtoMessage()    {}
func (*Fraction) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{3}
}

func (m *Fraction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Fraction.Unmarshal(m, b)
}
func (m *Fraction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Fraction.Marshal(b, m, deterministic)
}
func (m *Fraction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Fraction.Merge(m, src)
}
func (m *Fraction) XXX_Size() int {
	return xxx_messageInfo_Fraction.Size(m)
}
func (m *Fraction) XXX_DiscardUnknown() {
	xxx_messageInfo_Fraction.DiscardUnknown(m)
}

var xxx_messageInfo_Fraction proto.InternalMessageInfo

func (m *Fraction) GetNumerator() int32 {
	if m != nil {
		return m.Numerator
	}
	return 0
}

func (m *Fraction) GetDenominator() int32 {
	if m != nil {
		return m.Denominator
	}
	return 0
}

func init() {
	proto.RegisterEnum("mediainfo.FileType", FileType_name, FileType_value)
	proto.RegisterType((*Media)(nil), "mediainfo.Media")
	proto.RegisterType((*PhotoInfo)(nil), "mediainfo.PhotoInfo")
	proto.RegisterType((*FileInfo)(nil), "mediainfo.FileInfo")
	proto.RegisterType((*Fraction)(nil), "mediainfo.Fraction")
}

func init() { proto.RegisterFile("schema.proto", fileDescriptor_1c5fb4d8cc22d66a) }

var fileDescriptor_1c5fb4d8cc22d66a = []byte{
	// 482 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x93, 0xdf, 0x6a, 0x13, 0x41,
	0x14, 0xc6, 0x9d, 0x6c, 0x36, 0xc9, 0x4e, 0x52, 0x89, 0x63, 0x91, 0x41, 0x7a, 0xb1, 0xe4, 0xc6,
	0xa5, 0x42, 0x84, 0x48, 0x8b, 0xb7, 0x7a, 0xa1, 0xb4, 0x28, 0x94, 0xb1, 0xe0, 0x65, 0x98, 0x66,
	0x4f, 0xb2, 0x43, 0x33, 0x33, 0xcb, 0xce, 0x04, 0x8d, 0x6f, 0xe4, 0x73, 0xf8, 0x24, 0xbe, 0x89,
	0x9c, 0xb3, 0x4d, 0x5a, 0xb4, 0xb9, 0x3b, 0xdf, 0xef, 0x7c, 0xb3, 0xe7, 0x1f, 0xcb, 0x47, 0x61,
	0x51, 0x81, 0xd5, 0xd3, 0xba, 0xf1, 0xd1, 0x8b, 0xcc, 0x42, 0x69, 0xb4, 0x71, 0x4b, 0x3f, 0xf9,
	0xcd, 0x78, 0xfa, 0x05, 0x95, 0x18, 0xf3, 0xe4, 0x16, 0xb6, 0x92, 0xe5, 0xac, 0x18, 0x29, 0x0c,
	0xc5, 0x6b, 0xfe, 0x2c, 0x1a, 0x0b, 0x21, 0x6a, 0x5b, 0xcf, 0x03, 0x2c, 0xbc, 0x2b, 0x83, 0xec,
	0xe4, 0xac, 0x48, 0xd4, 0x78, 0x9f, 0xf8, 0xda, 0x72, 0x71, 0xca, 0xd3, 0xba, 0xf2, 0xd1, 0xcb,
	0x24, 0x67, 0xc5, 0x70, 0x76, 0x3c, 0xdd, 0xd7, 0x98, 0x5e, 0x21, 0xbf, 0x70, 0x4b, 0xaf, 0x5a,
	0x8b, 0x78, 0xc5, 0xbb, 0x4b, 0xb3, 0x06, 0xd9, 0xcd, 0x93, 0x62, 0x38, 0x7b, 0xfe, 0xc0, 0xfa,
	0xd1, 0xac, 0x81, 0x9c, 0x64, 0x10, 0x82, 0x77, 0x9d, 0xb6, 0x20, 0xd3, 0x9c, 0x15, 0x99, 0xa2,
	0x18, 0x59, 0xd4, 0xab, 0x20, 0xfb, 0x79, 0x82, 0x0c, 0xe3, 0xc9, 0x9f, 0x0e, 0xcf, 0xf6, 0x55,
	0x1e, 0xef, 0x9b, 0x1d, 0xe8, 0xfb, 0x25, 0x1f, 0x94, 0x3a, 0x02, 0x72, 0xc9, 0xa9, 0xcc, 0x5e,
	0x63, 0x29, 0xab, 0x6f, 0x81, 0x66, 0xce, 0x14, 0xc5, 0xe2, 0x98, 0xa7, 0xd6, 0x97, 0xb0, 0xa6,
	0x39, 0x33, 0xd5, 0x0a, 0xf1, 0x86, 0x0f, 0x74, 0x0d, 0x4d, 0xdc, 0x34, 0x38, 0x15, 0xfb, 0x77,
	0xaa, 0x46, 0x2f, 0xa2, 0xf1, 0x4e, 0xed, 0x4d, 0xe2, 0x1d, 0x3f, 0x82, 0x1f, 0xb5, 0x0f, 0x9b,
	0x06, 0xe6, 0x54, 0x3b, 0x3d, 0xfc, 0x6a, 0xb4, 0x73, 0x5e, 0x63, 0x53, 0xe7, 0x7c, 0xb4, 0xf4,
	0x0b, 0xbd, 0x9e, 0xaf, 0xc1, 0xad, 0x62, 0x25, 0x7b, 0x87, 0x1f, 0x0e, 0xc9, 0xf8, 0x99, 0x7c,
	0x78, 0x5f, 0x13, 0xbc, 0xec, 0xe7, 0xac, 0x48, 0x15, 0x86, 0x38, 0xca, 0x77, 0x53, 0xc6, 0x4a,
	0x0e, 0x88, 0xb5, 0x42, 0xbc, 0xe0, 0xbd, 0x0a, 0xcc, 0xaa, 0x8a, 0x32, 0x23, 0x7c, 0xa7, 0x26,
	0xbf, 0x18, 0x1f, 0xec, 0xce, 0x83, 0x5b, 0xc3, 0x03, 0xd1, 0x71, 0x58, 0xbb, 0xb5, 0x9d, 0xc6,
	0xeb, 0xc6, 0x6d, 0xdd, 0x6e, 0xed, 0xe9, 0x7f, 0xd7, 0xbd, 0xde, 0xd6, 0xa0, 0xc8, 0x80, 0x95,
	0x6c, 0x79, 0x16, 0x36, 0x96, 0x76, 0x39, 0x52, 0x77, 0x4a, 0x9c, 0xf0, 0x2c, 0x54, 0x7a, 0x76,
	0x76, 0x8e, 0xa9, 0x2e, 0xa5, 0xee, 0x81, 0x98, 0xf0, 0xa3, 0x60, 0x7e, 0xc2, 0xdc, 0xb8, 0xf9,
	0xcd, 0x36, 0x42, 0xa0, 0xcd, 0x25, 0x6a, 0x88, 0xf0, 0xc2, 0x7d, 0x40, 0x34, 0xb9, 0xe4, 0x83,
	0xdd, 0x12, 0xf0, 0x6b, 0x6e, 0x63, 0xa1, 0xd1, 0xd1, 0x37, 0xd4, 0x6b, 0xaa, 0xee, 0x81, 0xc8,
	0xf9, 0xb0, 0x04, 0xe7, 0xad, 0x71, 0x94, 0xef, 0x50, 0xfe, 0x21, 0x3a, 0x3d, 0x69, 0xc7, 0xc6,
	0xbe, 0x45, 0x9f, 0x27, 0x97, 0x57, 0x9f, 0xc6, 0x4f, 0x30, 0x50, 0xef, 0xbf, 0x8d, 0xd9, 0x4d,
	0x8f, 0xfe, 0xa8, 0xb7, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xf9, 0xf1, 0x03, 0xa6, 0x61, 0x03,
	0x00, 0x00,
}
