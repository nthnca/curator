// Code generated by protoc-gen-go. DO NOT EDIT.
// source: schema.proto

/*
Package message is a generated protocol buffer package.

It is generated from these files:
	schema.proto

It has these top-level messages:
	Media
	PhotoInfo
	FileInfo
	MediaSet
	Photo
	Fraction
	PhotoSet
	ComparisonEntry
	Comparison
	ComparisonSet
*/
package message

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FileType int32

const (
	FileType_JPG FileType = 0
	FileType_RAW FileType = 1
)

var FileType_name = map[int32]string{
	0: "JPG",
	1: "RAW",
}
var FileType_value = map[string]int32{
	"JPG": 0,
	"RAW": 1,
}

func (x FileType) String() string {
	return proto.EnumName(FileType_name, int32(x))
}
func (FileType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Media struct {
	Key                        []byte      `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	TimestampSecondsSinceEpoch int64       `protobuf:"varint,2,opt,name=timestamp_seconds_since_epoch,json=timestampSecondsSinceEpoch" json:"timestamp_seconds_since_epoch,omitempty"`
	Photo                      *PhotoInfo  `protobuf:"bytes,3,opt,name=photo" json:"photo,omitempty"`
	File                       []*FileInfo `protobuf:"bytes,4,rep,name=file" json:"file,omitempty"`
	Name                       string      `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	Deleted                    bool        `protobuf:"varint,6,opt,name=deleted" json:"deleted,omitempty"`
}

func (m *Media) Reset()                    { *m = Media{} }
func (m *Media) String() string            { return proto.CompactTextString(m) }
func (*Media) ProtoMessage()               {}
func (*Media) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Media) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Media) GetTimestampSecondsSinceEpoch() int64 {
	if m != nil {
		return m.TimestampSecondsSinceEpoch
	}
	return 0
}

func (m *Media) GetPhoto() *PhotoInfo {
	if m != nil {
		return m.Photo
	}
	return nil
}

func (m *Media) GetFile() []*FileInfo {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *Media) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Media) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

// Information about the original media capture, this information shouldn't change.
type PhotoInfo struct {
	DatetimeSecondsSinceEpoch int64     `protobuf:"varint,1,opt,name=datetime_seconds_since_epoch,json=datetimeSecondsSinceEpoch" json:"datetime_seconds_since_epoch,omitempty"`
	Make                      string    `protobuf:"bytes,2,opt,name=make" json:"make,omitempty"`
	Model                     string    `protobuf:"bytes,3,opt,name=model" json:"model,omitempty"`
	Aperture                  *Fraction `protobuf:"bytes,4,opt,name=aperture" json:"aperture,omitempty"`
	ExposureTime              *Fraction `protobuf:"bytes,5,opt,name=exposure_time,json=exposureTime" json:"exposure_time,omitempty"`
	FocalLength               *Fraction `protobuf:"bytes,6,opt,name=focal_length,json=focalLength" json:"focal_length,omitempty"`
	Iso                       int32     `protobuf:"varint,7,opt,name=iso" json:"iso,omitempty"`
	Width                     int32     `protobuf:"varint,8,opt,name=width" json:"width,omitempty"`
	Height                    int32     `protobuf:"varint,9,opt,name=height" json:"height,omitempty"`
}

func (m *PhotoInfo) Reset()                    { *m = PhotoInfo{} }
func (m *PhotoInfo) String() string            { return proto.CompactTextString(m) }
func (*PhotoInfo) ProtoMessage()               {}
func (*PhotoInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PhotoInfo) GetDatetimeSecondsSinceEpoch() int64 {
	if m != nil {
		return m.DatetimeSecondsSinceEpoch
	}
	return 0
}

func (m *PhotoInfo) GetMake() string {
	if m != nil {
		return m.Make
	}
	return ""
}

func (m *PhotoInfo) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *PhotoInfo) GetAperture() *Fraction {
	if m != nil {
		return m.Aperture
	}
	return nil
}

func (m *PhotoInfo) GetExposureTime() *Fraction {
	if m != nil {
		return m.ExposureTime
	}
	return nil
}

func (m *PhotoInfo) GetFocalLength() *Fraction {
	if m != nil {
		return m.FocalLength
	}
	return nil
}

func (m *PhotoInfo) GetIso() int32 {
	if m != nil {
		return m.Iso
	}
	return 0
}

func (m *PhotoInfo) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *PhotoInfo) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

type FileInfo struct {
	Filename    string   `protobuf:"bytes,1,opt,name=filename" json:"filename,omitempty"`
	Type        FileType `protobuf:"varint,2,opt,name=type,enum=message.FileType" json:"type,omitempty"`
	Md5Sum      []byte   `protobuf:"bytes,3,opt,name=md5sum,proto3" json:"md5sum,omitempty"`
	Sha256Sum   []byte   `protobuf:"bytes,4,opt,name=sha256sum,proto3" json:"sha256sum,omitempty"`
	SizeInBytes int64    `protobuf:"varint,5,opt,name=size_in_bytes,json=sizeInBytes" json:"size_in_bytes,omitempty"`
}

func (m *FileInfo) Reset()                    { *m = FileInfo{} }
func (m *FileInfo) String() string            { return proto.CompactTextString(m) }
func (*FileInfo) ProtoMessage()               {}
func (*FileInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *FileInfo) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *FileInfo) GetType() FileType {
	if m != nil {
		return m.Type
	}
	return FileType_JPG
}

func (m *FileInfo) GetMd5Sum() []byte {
	if m != nil {
		return m.Md5Sum
	}
	return nil
}

func (m *FileInfo) GetSha256Sum() []byte {
	if m != nil {
		return m.Sha256Sum
	}
	return nil
}

func (m *FileInfo) GetSizeInBytes() int64 {
	if m != nil {
		return m.SizeInBytes
	}
	return 0
}

type MediaSet struct {
	Media []*Media `protobuf:"bytes,1,rep,name=media" json:"media,omitempty"`
}

func (m *MediaSet) Reset()                    { *m = MediaSet{} }
func (m *MediaSet) String() string            { return proto.CompactTextString(m) }
func (*MediaSet) ProtoMessage()               {}
func (*MediaSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MediaSet) GetMedia() []*Media {
	if m != nil {
		return m.Media
	}
	return nil
}

type Photo struct {
	Key        string                 `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Path       string                 `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	NumBytes   int64                  `protobuf:"varint,3,opt,name=num_bytes,json=numBytes" json:"num_bytes,omitempty"`
	UserHide   bool                   `protobuf:"varint,5,opt,name=user_hide,json=userHide" json:"user_hide,omitempty"`
	Md5Sum     []byte                 `protobuf:"bytes,6,opt,name=md5sum,proto3" json:"md5sum,omitempty"`
	Sha256Sum  []byte                 `protobuf:"bytes,7,opt,name=sha256sum,proto3" json:"sha256sum,omitempty"`
	Properties *Photo_PhotoProperties `protobuf:"bytes,4,opt,name=properties" json:"properties,omitempty"`
}

func (m *Photo) Reset()                    { *m = Photo{} }
func (m *Photo) String() string            { return proto.CompactTextString(m) }
func (*Photo) ProtoMessage()               {}
func (*Photo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Photo) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Photo) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Photo) GetNumBytes() int64 {
	if m != nil {
		return m.NumBytes
	}
	return 0
}

func (m *Photo) GetUserHide() bool {
	if m != nil {
		return m.UserHide
	}
	return false
}

func (m *Photo) GetMd5Sum() []byte {
	if m != nil {
		return m.Md5Sum
	}
	return nil
}

func (m *Photo) GetSha256Sum() []byte {
	if m != nil {
		return m.Sha256Sum
	}
	return nil
}

func (m *Photo) GetProperties() *Photo_PhotoProperties {
	if m != nil {
		return m.Properties
	}
	return nil
}

type Photo_PhotoProperties struct {
	EpochInSeconds int64     `protobuf:"varint,1,opt,name=epoch_in_seconds,json=epochInSeconds" json:"epoch_in_seconds,omitempty"`
	Width          int32     `protobuf:"varint,2,opt,name=width" json:"width,omitempty"`
	Height         int32     `protobuf:"varint,3,opt,name=height" json:"height,omitempty"`
	Make           string    `protobuf:"bytes,4,opt,name=make" json:"make,omitempty"`
	Model          string    `protobuf:"bytes,5,opt,name=model" json:"model,omitempty"`
	Aperture       *Fraction `protobuf:"bytes,6,opt,name=aperture" json:"aperture,omitempty"`
	ExposureTime   *Fraction `protobuf:"bytes,7,opt,name=exposure_time,json=exposureTime" json:"exposure_time,omitempty"`
	FocalLength    *Fraction `protobuf:"bytes,8,opt,name=focal_length,json=focalLength" json:"focal_length,omitempty"`
	Iso            int32     `protobuf:"varint,9,opt,name=iso" json:"iso,omitempty"`
}

func (m *Photo_PhotoProperties) Reset()                    { *m = Photo_PhotoProperties{} }
func (m *Photo_PhotoProperties) String() string            { return proto.CompactTextString(m) }
func (*Photo_PhotoProperties) ProtoMessage()               {}
func (*Photo_PhotoProperties) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 0} }

func (m *Photo_PhotoProperties) GetEpochInSeconds() int64 {
	if m != nil {
		return m.EpochInSeconds
	}
	return 0
}

func (m *Photo_PhotoProperties) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Photo_PhotoProperties) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Photo_PhotoProperties) GetMake() string {
	if m != nil {
		return m.Make
	}
	return ""
}

func (m *Photo_PhotoProperties) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *Photo_PhotoProperties) GetAperture() *Fraction {
	if m != nil {
		return m.Aperture
	}
	return nil
}

func (m *Photo_PhotoProperties) GetExposureTime() *Fraction {
	if m != nil {
		return m.ExposureTime
	}
	return nil
}

func (m *Photo_PhotoProperties) GetFocalLength() *Fraction {
	if m != nil {
		return m.FocalLength
	}
	return nil
}

func (m *Photo_PhotoProperties) GetIso() int32 {
	if m != nil {
		return m.Iso
	}
	return 0
}

type Fraction struct {
	Numerator   int32 `protobuf:"varint,1,opt,name=numerator" json:"numerator,omitempty"`
	Denominator int32 `protobuf:"varint,2,opt,name=denominator" json:"denominator,omitempty"`
}

func (m *Fraction) Reset()                    { *m = Fraction{} }
func (m *Fraction) String() string            { return proto.CompactTextString(m) }
func (*Fraction) ProtoMessage()               {}
func (*Fraction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Fraction) GetNumerator() int32 {
	if m != nil {
		return m.Numerator
	}
	return 0
}

func (m *Fraction) GetDenominator() int32 {
	if m != nil {
		return m.Denominator
	}
	return 0
}

type PhotoSet struct {
	Photo []*Photo `protobuf:"bytes,1,rep,name=photo" json:"photo,omitempty"`
}

func (m *PhotoSet) Reset()                    { *m = PhotoSet{} }
func (m *PhotoSet) String() string            { return proto.CompactTextString(m) }
func (*PhotoSet) ProtoMessage()               {}
func (*PhotoSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *PhotoSet) GetPhoto() []*Photo {
	if m != nil {
		return m.Photo
	}
	return nil
}

type ComparisonEntry struct {
	Photo1 string `protobuf:"bytes,1,opt,name=photo1" json:"photo1,omitempty"`
	Photo2 string `protobuf:"bytes,2,opt,name=photo2" json:"photo2,omitempty"`
	// Should only be 1 or 2.
	Score int32 `protobuf:"varint,3,opt,name=score" json:"score,omitempty"`
}

func (m *ComparisonEntry) Reset()                    { *m = ComparisonEntry{} }
func (m *ComparisonEntry) String() string            { return proto.CompactTextString(m) }
func (*ComparisonEntry) ProtoMessage()               {}
func (*ComparisonEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ComparisonEntry) GetPhoto1() string {
	if m != nil {
		return m.Photo1
	}
	return ""
}

func (m *ComparisonEntry) GetPhoto2() string {
	if m != nil {
		return m.Photo2
	}
	return ""
}

func (m *ComparisonEntry) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

type Comparison struct {
	Epoch int64              `protobuf:"varint,1,opt,name=epoch" json:"epoch,omitempty"`
	Entry []*ComparisonEntry `protobuf:"bytes,2,rep,name=entry" json:"entry,omitempty"`
}

func (m *Comparison) Reset()                    { *m = Comparison{} }
func (m *Comparison) String() string            { return proto.CompactTextString(m) }
func (*Comparison) ProtoMessage()               {}
func (*Comparison) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Comparison) GetEpoch() int64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

func (m *Comparison) GetEntry() []*ComparisonEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type ComparisonSet struct {
	Comparison []*Comparison `protobuf:"bytes,1,rep,name=comparison" json:"comparison,omitempty"`
}

func (m *ComparisonSet) Reset()                    { *m = ComparisonSet{} }
func (m *ComparisonSet) String() string            { return proto.CompactTextString(m) }
func (*ComparisonSet) ProtoMessage()               {}
func (*ComparisonSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ComparisonSet) GetComparison() []*Comparison {
	if m != nil {
		return m.Comparison
	}
	return nil
}

func init() {
	proto.RegisterType((*Media)(nil), "message.Media")
	proto.RegisterType((*PhotoInfo)(nil), "message.PhotoInfo")
	proto.RegisterType((*FileInfo)(nil), "message.FileInfo")
	proto.RegisterType((*MediaSet)(nil), "message.MediaSet")
	proto.RegisterType((*Photo)(nil), "message.Photo")
	proto.RegisterType((*Photo_PhotoProperties)(nil), "message.Photo.PhotoProperties")
	proto.RegisterType((*Fraction)(nil), "message.Fraction")
	proto.RegisterType((*PhotoSet)(nil), "message.PhotoSet")
	proto.RegisterType((*ComparisonEntry)(nil), "message.ComparisonEntry")
	proto.RegisterType((*Comparison)(nil), "message.Comparison")
	proto.RegisterType((*ComparisonSet)(nil), "message.ComparisonSet")
	proto.RegisterEnum("message.FileType", FileType_name, FileType_value)
}

func init() { proto.RegisterFile("schema.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 778 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0x5f, 0x8f, 0xdb, 0x44,
	0x10, 0xc7, 0x49, 0x9c, 0xd8, 0x93, 0xdc, 0xf5, 0x58, 0x10, 0x32, 0xc7, 0x81, 0x2c, 0x0b, 0x24,
	0x0b, 0x89, 0x13, 0xa4, 0xb4, 0x8f, 0xa0, 0x02, 0x05, 0xae, 0x02, 0xe9, 0xb4, 0x57, 0xa9, 0x8f,
	0x96, 0x6b, 0xcf, 0x9d, 0x57, 0xcd, 0xee, 0x5a, 0xde, 0x8d, 0x20, 0x7c, 0x1c, 0x5e, 0xf8, 0x1e,
	0x7c, 0x05, 0x1e, 0xf9, 0x32, 0x68, 0xc7, 0x1b, 0x27, 0x0d, 0xe9, 0x43, 0xef, 0x25, 0x9a, 0x3f,
	0xbf, 0xf5, 0xce, 0x6f, 0x66, 0x7e, 0x1b, 0x58, 0x98, 0xaa, 0x41, 0x59, 0x5e, 0xb6, 0x9d, 0xb6,
	0x9a, 0xcd, 0x24, 0x1a, 0x53, 0xde, 0x61, 0xf6, 0x6f, 0x00, 0xe1, 0xaf, 0x58, 0x8b, 0x92, 0x9d,
	0xc1, 0xf8, 0x15, 0x6e, 0x92, 0x20, 0x0d, 0xf2, 0x05, 0x77, 0x26, 0x7b, 0x02, 0x1f, 0x5b, 0x21,
	0xd1, 0xd8, 0x52, 0xb6, 0x85, 0xc1, 0x4a, 0xab, 0xda, 0x14, 0x46, 0xa8, 0x0a, 0x0b, 0x6c, 0x75,
	0xd5, 0x24, 0xa3, 0x34, 0xc8, 0xc7, 0xfc, 0x7c, 0x00, 0xdd, 0xf4, 0x98, 0x1b, 0x07, 0x79, 0xea,
	0x10, 0x2c, 0x87, 0xb0, 0x6d, 0xb4, 0xd5, 0xc9, 0x38, 0x0d, 0xf2, 0xf9, 0x92, 0x5d, 0xfa, 0x7b,
	0x2f, 0xaf, 0x5d, 0xf4, 0x4a, 0xdd, 0x6a, 0xde, 0x03, 0xd8, 0x67, 0x30, 0xb9, 0x15, 0x2b, 0x4c,
	0x26, 0xe9, 0x38, 0x9f, 0x2f, 0xdf, 0x1d, 0x80, 0x3f, 0x8a, 0x15, 0x12, 0x8e, 0xd2, 0x8c, 0xc1,
	0x44, 0x95, 0x12, 0x93, 0x30, 0x0d, 0xf2, 0x98, 0x93, 0xcd, 0x12, 0x98, 0xd5, 0xb8, 0x42, 0x8b,
	0x75, 0x32, 0x4d, 0x83, 0x3c, 0xe2, 0x5b, 0x37, 0xfb, 0x67, 0x04, 0xf1, 0x70, 0x13, 0xfb, 0x16,
	0x2e, 0xea, 0xd2, 0xa2, 0x2b, 0xf7, 0x28, 0x9d, 0x80, 0xe8, 0x7c, 0xb8, 0xc5, 0xfc, 0x9f, 0x0d,
	0x83, 0x89, 0x2c, 0x5f, 0x21, 0xf1, 0x8e, 0x39, 0xd9, 0xec, 0x7d, 0x08, 0xa5, 0xae, 0x71, 0x45,
	0x0c, 0x63, 0xde, 0x3b, 0xec, 0x0b, 0x88, 0xca, 0x16, 0x3b, 0xbb, 0xee, 0x1c, 0xa3, 0xe0, 0x75,
	0x46, 0x5d, 0x59, 0x59, 0xa1, 0x15, 0x1f, 0x20, 0xec, 0x31, 0x9c, 0xe0, 0xef, 0xad, 0x36, 0xeb,
	0x0e, 0x0b, 0x77, 0x35, 0xd1, 0x3b, 0x7a, 0x66, 0xb1, 0xc5, 0x3d, 0x17, 0x12, 0xd9, 0xd7, 0xb0,
	0xb8, 0xd5, 0x55, 0xb9, 0x2a, 0x56, 0xa8, 0xee, 0x6c, 0x43, 0xf4, 0x8f, 0x1e, 0x9b, 0x13, 0xec,
	0x17, 0x42, 0xb9, 0x49, 0x0b, 0xa3, 0x93, 0x59, 0x1a, 0xe4, 0x21, 0x77, 0xa6, 0x23, 0xf1, 0x9b,
	0xa8, 0x6d, 0x93, 0x44, 0x14, 0xeb, 0x1d, 0xf6, 0x01, 0x4c, 0x1b, 0x14, 0x77, 0x8d, 0x4d, 0x62,
	0x0a, 0x7b, 0x2f, 0xfb, 0x2b, 0x80, 0x68, 0x3b, 0x16, 0x76, 0x0e, 0x91, 0x1b, 0x0c, 0x0d, 0x25,
	0xa0, 0x16, 0x0c, 0xbe, 0x9b, 0xa9, 0xdd, 0xb4, 0x7d, 0xbf, 0x4e, 0x0f, 0x66, 0xfa, 0x7c, 0xd3,
	0x22, 0xa7, 0xb4, 0xbb, 0x47, 0xd6, 0x8f, 0xcc, 0x5a, 0x52, 0x0f, 0x17, 0xdc, 0x7b, 0xec, 0x02,
	0x62, 0xd3, 0x94, 0xcb, 0x47, 0x8f, 0x5d, 0x6a, 0x42, 0xa9, 0x5d, 0x80, 0x65, 0x70, 0x62, 0xc4,
	0x1f, 0x58, 0x08, 0x55, 0xbc, 0xdc, 0x58, 0x34, 0xd4, 0xb3, 0x31, 0x9f, 0xbb, 0xe0, 0x95, 0xfa,
	0xce, 0x85, 0xb2, 0x2f, 0x21, 0xa2, 0xe5, 0xbe, 0x41, 0xcb, 0x3e, 0x85, 0x50, 0x3a, 0x3b, 0x09,
	0x68, 0xc3, 0x4e, 0x87, 0x6a, 0x08, 0xc1, 0xfb, 0x64, 0xf6, 0xe7, 0x04, 0x42, 0xda, 0x98, 0x7d,
	0x3d, 0xc4, 0xbd, 0x1e, 0x18, 0x4c, 0xda, 0xd2, 0x36, 0xdb, 0xf1, 0x3b, 0x9b, 0x7d, 0x04, 0xb1,
	0x5a, 0x4b, 0x5f, 0xc1, 0x98, 0x2a, 0x88, 0xd4, 0x5a, 0xd2, 0xf5, 0x2e, 0xb9, 0x36, 0xd8, 0x15,
	0x8d, 0xa8, 0xfb, 0x91, 0x46, 0x3c, 0x72, 0x81, 0x9f, 0x45, 0xbd, 0xcf, 0x7a, 0xfa, 0x66, 0xd6,
	0xb3, 0x43, 0xd6, 0xdf, 0x00, 0xb4, 0x9d, 0x76, 0x7b, 0x23, 0xd0, 0xf8, 0xd5, 0xfa, 0xe4, 0x75,
	0x55, 0xf5, 0xbf, 0xd7, 0x03, 0x8a, 0xef, 0x9d, 0x38, 0xff, 0x7b, 0x04, 0x0f, 0x0e, 0xf2, 0x2c,
	0x87, 0x33, 0x12, 0x80, 0x6b, 0xa5, 0xd7, 0x85, 0xd7, 0xc2, 0x29, 0xc5, 0xaf, 0x94, 0x97, 0xc2,
	0x6e, 0x4f, 0x46, 0xc7, 0xf7, 0x64, 0xbc, 0xbf, 0x27, 0x83, 0x5c, 0x26, 0xc7, 0xe4, 0x12, 0xbe,
	0x49, 0x2e, 0xd3, 0x7b, 0xc8, 0x65, 0x76, 0x3f, 0xb9, 0x44, 0x6f, 0x23, 0x97, 0x78, 0x90, 0x4b,
	0xf6, 0x0c, 0xa2, 0x2d, 0xd4, 0x8d, 0x4b, 0xad, 0x25, 0x76, 0xa5, 0xd5, 0x1d, 0x75, 0x2d, 0xe4,
	0xbb, 0x00, 0x4b, 0x61, 0x5e, 0xa3, 0xd2, 0x52, 0x28, 0xca, 0xf7, 0x6d, 0xdb, 0x0f, 0xb9, 0x15,
	0xa5, 0x79, 0xf8, 0x15, 0xed, 0x5f, 0xcb, 0xc3, 0x15, 0x25, 0x84, 0x7f, 0x29, 0xb3, 0x17, 0xf0,
	0xe0, 0x7b, 0x2d, 0xdb, 0xb2, 0x13, 0x46, 0xab, 0xa7, 0xca, 0x76, 0x1b, 0x37, 0x01, 0xca, 0x7d,
	0xe5, 0xd7, 0xd5, 0x7b, 0x43, 0x7c, 0xe9, 0x77, 0xd6, 0x7b, 0x6e, 0x0a, 0xa6, 0xd2, 0x1d, 0xfa,
	0x81, 0xf5, 0x4e, 0xc6, 0x01, 0x76, 0x1f, 0x76, 0x98, 0xfd, 0x67, 0xb1, 0x77, 0xd8, 0x25, 0x84,
	0xe8, 0xae, 0x4c, 0x46, 0x54, 0x62, 0x32, 0x94, 0x78, 0x50, 0x12, 0xef, 0x61, 0xd9, 0x0f, 0x70,
	0xb2, 0xcb, 0x38, 0x8e, 0x0f, 0x01, 0xaa, 0x21, 0xe0, 0x89, 0xbe, 0x77, 0xe4, 0x2b, 0x7c, 0x0f,
	0xf6, 0xf9, 0x45, 0xff, 0xe0, 0xb8, 0x37, 0x83, 0xcd, 0x60, 0xfc, 0xec, 0xfa, 0xa7, 0xb3, 0x77,
	0x9c, 0xc1, 0x9f, 0xbc, 0x38, 0x0b, 0x5e, 0x4e, 0xe9, 0x3f, 0xed, 0xe1, 0x7f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x02, 0x3f, 0x16, 0x26, 0xe3, 0x06, 0x00, 0x00,
}
